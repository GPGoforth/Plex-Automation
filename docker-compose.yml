version: '3.9'

services:

  portainer: # used to manage containers
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $APPDATA/portainer-data:/data
    ports:
      - "9000:9000"

  plex: # Media Server
    container_name: plex
    image: plexinc/pms-docker:plexpass
    restart: unless-stopped
    logging:
      driver: json-file
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=002
      - DEBUG=no
      - PLEX_CLAIM=$PLEX_CLAIM
      - PLEX_PASS=$PLEX_PASS
      - ADVERTISE_IP=$PLEX_ADVERTISE_IP
    volumes:
      - $APPDATA/plex:/config:rw
      - $PLEXMEDIA:/Libraries:rw
      - /tmp:/transcode:rw
    devices:
      - /dev/dri:/dev/dri # enables hardware trascoding using quicksync hardware acceleration
      # - /dev/dvb:/dev/dvb # enables hardware trascoding using dvb devices
    privileged: true # libusb_init failed
    network_mode: host

  radarr: #searches and finds  movies
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDATA/radarr:/config
      - $DOWNDIR:/downloads
      - $PLEXMEDIA:/Libraries
    ports:
      - "7878:7878"
    restart: unless-stopped
    networks:
      - media-network

  sonarr: #searches and finds tv shows
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDATA/sonarr:/config
      - $DOWNDIR:/downloads
      - $PLEXMEDIA:/Libraries
    ports:
      - "8989:8989"
    restart: unless-stopped
    networks:
      - media-network

  lidarr: #searches and finds music
    image: linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDATA/lidarr:/config
      - $DOWNDIR:/downloads
      - $PLEXMEDIA:/Libraries
    ports:
      - "8686:8686"
    restart: unless-stopped
    networks:
      - media-network

  prowlarr: # used to manage indexers in radarr, sonarr, lidarr
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDATA/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      - media-network

  bazarr: #searches and finds subtitles
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDATA/bazarr:/config
      - $DOWNDIR:/downloads
      - $PLEXMEDIA:/Libraries
    ports:
      - "6767:6767"
    restart: unless-stopped
    networks:
      - media-network

  sabnzbd: #download client
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDATA/sabnzb:/config
      - $DOWNDIR:/downloads
      - $INCDOWNDIR:/incomplete-downloads
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - media-network

  overseerr: #media requesting tool
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - TZ=$TZ
    volumes:
      - $APPDATA/overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped
    networks:
      - media-network

  heimdall: #homepage to store links
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDATA/heimdall:/config
    ports:
      - "80:80"
      - "443:443"
      # - "8083:80"
    restart: unless-stopped
    networks:
      - media-network

  homarr: # can monitor and create pages for links
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    volumes:
      - $APPDATA/homarr:/config
      - $APPDATA/homarr/icons:/icons
    ports:
      - "7575:7575"
    restart: unless-stopped
    networks:
      - media-network

  watchtower: # keeps containers up to date
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - media-network

  autoheal: #makes sure containers are running and restarts when needed
    image: willfarrell/autoheal
    container_name: autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - AUTOHEAL_INTERVAL=5
      - AUTOHEAL_START_PERIOD=0
      - CURL_TIMEOUT=30
    restart: unless-stopped
    networks:
      - media-network

networks:
  media-network:
